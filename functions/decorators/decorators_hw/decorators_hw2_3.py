# Объявите функцию, которая принимает строку с кириллицей (и другими символами) и преобразовывает
# русские буквы в латиницу, используя следующий словарь для замены русских букв на соответствующее латинское написание:
# # Функция должна возвращать преобразованную строку. Замены делать без учета регистра
# (переданную строку перевести в нижний регистр - малые буквы).
# # Определите декоратор с параметром chars и начальным значением " !?",
# который данные символы преобразует в символ "-" и, кроме того, все подряд идущие дефисы (например, "--" или "---")
# приводит к одному дефису. Полученный результат должен возвращаться в виде строки.
# # Примените декоратор с аргументом chars="?!:;,. " к функции и вызовите декорированную функцию для строки s:
# # s = input()
# Результат работы декорированной функции отобразите на экране.


t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}

def decorator_sep(chars='!?'):
    def decorator_space(func):
        def wrapper(*args, **kwargs):
            res = ''
            for i in func(*args, **kwargs):
                if i in list(chars):
                    res += '-'
                else:
                    res += i
            while res.count('--'):
                res = res.replace("--", '-')
            return res

        return wrapper

    return decorator_space





@decorator_sep(chars="?!:;,. ")
def get_eng(st):
    res = ''
    for i in st.lower():
        if "а" <= i <= "я":
           res += t[i]
        else:
            res += i
    return res

s = input()
print(get_eng(s))

